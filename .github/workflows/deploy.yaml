name: Deploy to EKS

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
      CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
      NAMESPACE: ${{ secrets.EKS_NAMESPACE }}
      KUBECONFIG: $HOME/.kube/config

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set up kubeconfig for EKS
      run: |
        mkdir -p ~/.kube
        aws eks update-kubeconfig \
          --name $CLUSTER_NAME \
          --region $AWS_REGION \
          --kubeconfig $KUBECONFIG

    - name: Build and Push Docker Image
      run: |
        IMAGE_TAG=${ECR_REGISTRY}/otel-frontend:latest
        docker build -t $IMAGE_TAG -f src/frontend/Dockerfile src/frontend
        docker push $IMAGE_TAG

    - name: Update K8s Deployment in EKS
      run: |
        GIT_COMMIT=$(git rev-parse --short HEAD)
        GIT_MESSAGE=$(git log -1 --pretty=%s)
        echo "üì¶ Deploying commit: $GIT_COMMIT - $GIT_MESSAGE"

        kubectl set image deployment/frontend \
          frontend=${ECR_REGISTRY}/otel-frontend:latest \
          -n $NAMESPACE

    - name: Check rollout status
      run: |
        kubectl rollout status deployment/frontend -n $NAMESPACE

    - name: Annotate latest ReplicaSet with change cause
      run: |
        GIT_COMMIT=$(git rev-parse --short HEAD)
        GIT_MESSAGE=$(git log -1 --pretty=%s)

        # Get the name of the latest ReplicaSet created by the frontend Deployment
        RS_NAME=$(kubectl get rs -n $NAMESPACE \
          --sort-by=.metadata.creationTimestamp \
          -o jsonpath='{range .items[?(@.metadata.ownerReferences[0].name=="frontend")]}{.metadata.name}{"\n"}{end}' \
          | tail -n1)

        echo "üîç Annotating ReplicaSet $RS_NAME with change-cause: Commit $GIT_COMMIT: $GIT_MESSAGE"

        kubectl annotate rs $RS_NAME \
          kubernetes.io/change-cause="Commit $GIT_COMMIT: $GIT_MESSAGE" \
          --overwrite -n $NAMESPACE


    - name: Rollback on failure
      if: failure()
      run: |
        echo "‚ö†Ô∏è Deployment failed. Rolling back..."
        kubectl rollout undo deployment/frontend -n $NAMESPACE
