name: Build, Test, and Deploy Frontend to EKS with ECR

on:
  push:
    branches:
      - main

env:
  REGION: ${{ secrets.AWS_REGION }}
  CLUSTER: ${{ secrets.CLUSTER_NAME }}
  ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.REGION }}

    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com

    - name: Build and Push Frontend Image
      run: |
        docker build -t otel-frontend ./src/frontend
        docker tag otel-frontend $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/otel-frontend:latest
        docker push $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/otel-frontend:latest

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --region $REGION --name $CLUSTER

    - name: Update Frontend Deployment
      run: |
        kubectl set image deployment/frontend frontend=$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/otel-frontend:latest -n otel-helm
        kubectl rollout status deployment/frontend -n otel-helm

    - name: Rollback on Failure
      if: failure()
      run: |
        kubectl rollout undo deployment/frontend -n otel-helm || true
