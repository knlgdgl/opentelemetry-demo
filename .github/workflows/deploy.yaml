name: Deploy to EKS

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
      CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
      NAMESPACE: ${{ secrets.EKS_NAMESPACE }}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and Push Docker Image
      run: |
        cd src/frontend
        IMAGE_TAG=${ECR_REGISTRY}/otel-frontend:latest
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

    - name: Update K8s Deployment in EKS
      run: |
        aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION
        kubectl set image deployment/frontend frontend=${ECR_REGISTRY}/otel-frontend:latest -n $NAMESPACE

    - name: Check rollout status
      run: |
        kubectl rollout status deployment/frontend -n $NAMESPACE

    - name: Rollback on failure
      if: failure()
      run: |
        echo "⚠️ Deployment failed. Rolling back..."
        kubectl rollout undo deployment/frontend -n $NAMESPACE
